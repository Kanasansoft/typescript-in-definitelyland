={postdef} 型の国からの手紙

ここまでTypeScriptについて力の限り紹介してきましたが、いかがでしたでしょうか。
脳みそにイロハが刷り込まれ指先からコードがほとばしるようになったでしょうか？

#@# @suppress JapaneseAmbiguousNounConjunction
TypeScriptの魅力は開発環境や入力補完やリファクタリング機能の正確さも込みです。
残念ながら紙面やWebページ上ではその魅力を伝えるのは難しいです。
ですので、ぜひ読者の皆様の手元でその良さを体感してもらえればと思います。

本書では知識の効率的な摂取を目的にTypeScriptのエッセンスを抽出し、型の国の魅力を伝えてきました。
冒頭でも述べたとおり近年、TypeScriptのバージョンアップは細やかな機能向上、重箱の角すらキレイにフォローする工夫、強力なエディタ支援のAPIが盛り込まれています。
TypeScriptは言語として成熟し、どんどんプロダクトに放り込んで使い倒し、自らの血肉とし、筋力をつけていくフェーズです。

創造的なプログラミングの助けとなるよう、本文では紙面が許す限りのサンプルコードを使って具体例を示してきました。
モノによっては遭遇すること自体が稀なケース、また遭遇しないほうが幸せなテクニックもありますが…。

これらを含めてまるっと網羅的に理解できると文句なしですが、そうもいかないこともあるでしょう。
使ってみてサンプルコードと類似の状況が発見できたら、該当部分を読み返してみてください。
自分で体験した後に読むとまた一段上の理解が得られるはずです。
筋力です。

またサンプルコードで紹介する出力例にはエラーコードも含める工夫を行っています。
トラブルに遭遇したとき、本書を検索すると型の国からの手紙が見つかるかもしれません。

TypeScriptには学習コストという小山がありますが、ここまで読み進めた読者にとってはもはやクリアした課題です。
勝ったな！ガハハ！の精神です。

高機能で信頼できるTypeScriptを使ってよい開発ライフを過ごしていきましょう。

それでは、次の改定版でお会いしましょう。

#@# OK mhidaka なおこの文章は筆者であるvvakameの気持ちになったmhidakaが書きました。あとがきがほしかったのでやりました。でも、だいたい9割9分ぐらいわかめの英霊をつかってかいたので作者のあとがきのあつかいで大丈夫だろ、って気持ちです。
#@# 7割くらいそのまま使えて笑った
