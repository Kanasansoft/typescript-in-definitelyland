# review-epubmaker向けの設定ファイルの例。
# yamlファイルをRe:VIEWファイルのある場所に置き、
# 「review-epubmaker yamlファイル」を実行すると、<bookname>.epubファイルが
# 生成されます。
# このファイルはUTF-8エンコーディングで記述してください。

# from https://github.com/kmuto/review/blob/master/doc/sample.yaml

# ブック名(ファイル名になるもの。ASCII範囲の文字を使用)
bookname: typescript-in-definitelyland
# 記述言語
language: ja
# 書名
title: TypeScript in Definitelyland
# 著者
aut: vvakame
prt: TechBooster
prt_url:  http://techbooster.org/
edt: mhidaka
# 刊行日。YYYY-MM-DD形式。省略した場合は本日の日付
date: 2014-12-30
rights: |
  (C) 2014 vvakame
description:
# 以下はオプション
#prt: 出版社
# asn: Associated name
# ant: Bibliographic antecedent
# clb: 貢献者
# edt: 編集者
# dsr: デザイナ
# ill: イラストレータ
# pht: 撮影者
# trl: 翻訳者
# date: 刊行日
# rights: 権利表記
# description: ブックの説明
#
# coverfile: カバーページのbody要素内に挿入する内容を記述したファイル名
# coverimage: 表紙用画像ファイル
# 固有IDに使用するドメイン
urnid: http://typescript.ninja/typescript-in-definitelyland/
# CSSファイル (yamlファイルおよびReVIEWファイルを置いたディレクトリにあること
stylesheet: ["style.css"]
# LaTeX用のスタイルファイル(styディレクトリ以下に置くこと)
texstyle: techbooster-doujin
# LaTeX用のdocumentclassを指定する
texdocumentclass: ["jsbook", "b5j,twoside,openany"]
# 目次として抽出するレベル
toclevel: 2
# セクション番号を表示するレベル
secnolevel: 2
# EPUBのバージョン(現時点では2または3。デフォルトは2)
epubversion: 3
# HTMLのバージョン(現時点では4または5。デフォルトは4。epubversionを3にした場合は自動で5に設定される)
htmlversion: 5
# 表紙を出力するか
titlepage: true
# 目次を出力するか
toc: true
# EPUB標準の目次以外に目次を作成するか
mytoc: null
# 奥付を作成するか。デフォルトでは作成されない。trueを指定するとデフォルトの奥付、ファイル名を指定するとそれがcolophon.htmlとしてコピーされる
colophon: true
# XHTML生成後に実行するプログラム。$1:HTMLの生成されたディレクトリ $2:ReVIEWファイルのあるディレクトリ $3:起動時指定のyamlファイル名
# posthook: hook.sh
# EPUBで表紙をコンテンツに含めるか。デフォルトでは作成されない。yesにするとiBooks等でも最初に表紙が表示されるようになる
cover_linear: null
# review-compileに渡すパラメータ
params: --stylesheet=style.css
# デバッグフラグ。nullでないときには一時ファイルをカレントディレクトリに作成し、削除もしない
debug: null
# 子ビルダに渡すパラメータ
params:

# 発行年月。YYYY-MM-DD形式による配列指定。省略した場合はdateを使用する
# 複数指定する場合は次のように記述する
# [["初版第第1刷の日付", "初版第第2刷の日付"], ["第2版第1刷の日付"]]
# 日付の後ろを空白文字で区切り、任意の文字列を置くことも可能。
history:
  - ["2014年12月30日  初版発行 v1.0.0"]
